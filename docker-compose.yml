version: '3.8'

services:
  api:
    build: .
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      postgres_network:
      app_net:
        ipv4_address: 192.168.0.2
    env_file:
      - .env
    environment:
      - API_PUBLIC_URL=https://law.jbgolds.com
      - PYTHONPATH=/app
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google-credentials/credentials.json
      # PostgreSQL variables will be loaded from .env file
    volumes:
      - .:/app
      - ./google-credentials/gen-lang-client-0880888016-41345dc4d59a.json:/app/google-credentials/credentials.json
    depends_on:
      - neo4j # Simple dependency without health check
    restart: always
    labels:
      - "com.cloudflare.tunnel.expose=true"

  neo4j:
    image: neo4j:latest
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./src/neo4j_import:/var/lib/neo4j/import
      - ./neo4j_backups:/backups
    env_file:
      - .env
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      # Use environment variables for authentication instead of hardcoding
    ports:
      - "127.0.0.1:7474:7474"
      - "127.0.0.1:7687:7687"
    restart: always
    networks:
      app_net:
        ipv4_address: 192.168.0.3

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    restart: unless-stopped
    networks:
      app_net:
        ipv4_address: 192.168.0.4
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - api

volumes:
  neo4j_data:
  neo4j_logs:


networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16
  postgres_network:
    external: true
    name: postgres_network
